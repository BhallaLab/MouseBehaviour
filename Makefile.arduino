############################################################################
# NOTE: This file is generated by cmake using Makefile.arduino.in file. Any exit
# made to this file will be lost on reconfiguration. Please edit the
# Makefile.arduino.in file.
#
# Tested on Ubuntu-16.04
##############################################################################

UNAME_S := $(shell uname -s)

# PROJECT_DIR
# This is the path to where you have created/cloned your project
PROJECT_DIR       = .

# ARDMK_DIR
# Path to the Arduino-Makefile directory.
ARDMK_DIR         = $(PROJECT_DIR)/makefiles
#RESET_COMMAND 	  = $(ARDUINO_DIR)/bin/ard-reset-arduino

# ARDUINO_DIR
ARDUINO_BIN       = /usr/bin/arduino
ARDUINO_DIR       = /usr/share/arduino

# BOARD_TAG
# It must be set to the board you are currently using. (i.e uno, mega2560, etc.)
BOARD_TAG         = uno

# MONITOR_BAUDRATE
# It must be set to Serial baudrate value you are using.
MONITOR_BAUDRATE  = 38400

# CFLAGS_STD
# Set the C standard to be used during compilation. Documentation (https://github.com/WeAreLeka/Arduino-Makefile/blob/std-flags/arduino-mk-vars.md#cflags_std)
CFLAGS_STD        = 

# CXXFLAGS_STD
# Set the C++ standard to be used during compilation. Documentation (https://github.com/WeAreLeka/Arduino-Makefile/blob/std-flags/arduino-mk-vars.md#cxxflags_std)
CXXFLAGS_STD      = -std=c++1y

# We treat most warnings as error. Some warnings are not treated as errors due
# to various reasons. The arduino library itself has many errors which we become
# very strict about warnings.
CXXFLAGS         += -Wall -Wextra -Werror \
		    -Wno-sign-compare \
		    -Wno-unused-parameter -Wno-unused-function -Wno-unused-variable \

# MONITOR_PORT
# The port your board is connected to. Using an '*' tries all the ports and finds the right one.
MONITOR_PORT      = $(shell bash $(PROJECT_DIR)/scripts/list_serial_ports.sh)

# CURRENT_DIR
# Do not touch - used for binaries path
CURRENT_DIR       = $(shell basename $(CURDIR))

# OBJDIR
# This is where you put the binaries you just compile using 'make'
OBJDIR            = $(PROJECT_DIR)/bin/$(BOARD_TAG)/$(CURRENT_DIR)

ARDUINO_LIBS      = 

# INO file and other cpp files
LOCAL_INO_SRCS     = $(PROJECT_DIR)/src/main.ino 
LOCAL_CPP_SRCS     = 

### Do not touch - the path to Arduino.mk, inside the ARDMK_DIR
include $(ARDMK_DIR)/Arduino.mk

run : upload
	miniterm.py /dev/ttyACM0 38400
