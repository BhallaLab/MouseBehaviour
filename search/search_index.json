{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Various mouse behaviour protocols are implemented in this repository. To execute the pipeline, we use a Docker image which is available on docker hub. See Run pipeline section for more details. To build the pipeline, see Build pipeline section.","title":"Home"},{"location":"build_pipeline/","text":"You build this pipeline, you need various components. Hardares Electrical PCB Electrical Components Mechanical 3D designs Softwares KiCAD FreeCAD python3.6+ GCC C++ Compiler cmake, git","title":"Build pipeline"},{"location":"build_pipeline/#hardares","text":"","title":"Hardares"},{"location":"build_pipeline/#electrical","text":"PCB Electrical Components","title":"Electrical"},{"location":"build_pipeline/#mechanical","text":"3D designs","title":"Mechanical"},{"location":"build_pipeline/#softwares","text":"KiCAD FreeCAD python3.6+ GCC C++ Compiler cmake, git","title":"Softwares"},{"location":"eda/","text":"Components Hardware Arduino Uno borad PointGrey camera CAD Electrical cad designs are in the folder CAD/EDA . It requires KiCAD version 5 or higher. The final PCB design is also available on various releases (one is available at https://github.com/BhallaLab/MouseBehaviour/releases/tag/v2019.07.10 ). And see the schematic . More information is available here . Run the pipeline","title":"Components"},{"location":"eda/#components","text":"","title":"Components"},{"location":"eda/#hardware","text":"Arduino Uno borad PointGrey camera","title":"Hardware"},{"location":"eda/#cad","text":"Electrical cad designs are in the folder CAD/EDA . It requires KiCAD version 5 or higher. The final PCB design is also available on various releases (one is available at https://github.com/BhallaLab/MouseBehaviour/releases/tag/v2019.07.10 ). And see the schematic . More information is available here .","title":"CAD"},{"location":"eda/#run-the-pipeline","text":"","title":"Run the pipeline"},{"location":"run_pipeline/","text":"Docker is the recommended to run this pipeline. To get the required image, execute docker pull bhallalab/mousebehaviour in the terminal. Installing Docker Installing and checking docker Follow these instruction to install docker . Also see these instructions for adding proxy support to docker. To check that docker works fine, execute following in the terminal. $ docker run hello-world I saw the following output. Unable to find image 'hello-world:latest' locally latest: Pulling from library/hello-world 1b930d010525: Pull complete Digest: sha256:6540fc08ee6e6b7b63468dc3317e3303aae178cb8a45ed3123180328bcc1d20f Status: Downloaded newer image for hello-world:latest Hello from Docker! . . Pipeline in Docker The docker image is available on hub.docker.com. You can get it by executing the following: $ docker pull bhallalab/mousebehaviour To run this image, we must make sure that docker can access devices connected to host computer. We also need to collect data generated inside the docker during experiment and save it to the host machine. Note Type xhost + once in the terminal. This makes docker to access graphics. You have to do it just once. Following command inside the terminal did the job for me. Make sure that camera and Arduino Uno board are connected to host computer. Camera requires USB3.0 if you want high frame rate. We were able to get 200 FPS. # camera and arduino must be connected. docker run --rm \\ --net=host --privileged \\ -v /dev:/dev \\ -e DISPLAY=$(DISPLAY) \\ -v /tmp/.X11-unix:/tmp/.X11-unix \\ -v $(HOME)/.Xauthority:/root/.Xauthority \\ -v $(HOME)/DATA:/root/DATA \\ -it bhallalab/mousebehaviour And voila, you should see this gui. More information is here . When in doubt, hover your mouse pointer on gui and a helpful message should pop-up (hopefully).","title":"Run pipeline"},{"location":"run_pipeline/#pipeline-in-docker","text":"The docker image is available on hub.docker.com. You can get it by executing the following: $ docker pull bhallalab/mousebehaviour To run this image, we must make sure that docker can access devices connected to host computer. We also need to collect data generated inside the docker during experiment and save it to the host machine. Note Type xhost + once in the terminal. This makes docker to access graphics. You have to do it just once. Following command inside the terminal did the job for me. Make sure that camera and Arduino Uno board are connected to host computer. Camera requires USB3.0 if you want high frame rate. We were able to get 200 FPS. # camera and arduino must be connected. docker run --rm \\ --net=host --privileged \\ -v /dev:/dev \\ -e DISPLAY=$(DISPLAY) \\ -v /tmp/.X11-unix:/tmp/.X11-unix \\ -v $(HOME)/.Xauthority:/root/.Xauthority \\ -v $(HOME)/DATA:/root/DATA \\ -it bhallalab/mousebehaviour And voila, you should see this gui. More information is here . When in doubt, hover your mouse pointer on gui and a helpful message should pop-up (hopefully).","title":"Pipeline in Docker"}]}